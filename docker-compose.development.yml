version: '3.8'

services:
  app:
    image: local/erm-tz_development
    container_name: local_erm-tz_development
    hostname: local/erm-tz_development
    build:
      context: .
      target: dev
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      - APP_PORT=${APP_PORT}
      - APP_ENV=${APP_ENV}
      - APP_API_BASE_PATH=${APP_API_BASE_PATH}

      - JWT_SECRET_KEY=${JWT_SECRET_KEY}

      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

      - GOOGLE_OAUTH_ACCESS_TOKEN=${GOOGLE_OAUTH_ACCESS_TOKEN}
      - GOOGLE_OAUTH_REFRESH_TOKEN=${GOOGLE_OAUTH_REFRESH_TOKEN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - GOOGLE_AUTH_URL=${GOOGLE_AUTH_URL}
      - GOOGLE_TOKEN_URL=${GOOGLE_TOKEN_URL}

      - EMAIL_TOKEN_EXPIRY=${EMAIL_TOKEN_EXPIRY}
      - EMAIL_SENDER=${EMAIL_SENDER}
      - EMAIL_VERIFICATION_URL=${EMAIL_VERIFICATION_URL}
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    container_name: local_erm-tz_db_development
    hostname: local/erm-tz_db_development
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./local/init/local-init.sql.gz:/docker-entrypoint-initdb.d/local-init.sql.gz
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data: